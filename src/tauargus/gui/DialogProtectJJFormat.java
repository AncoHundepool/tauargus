/*
* Argus Open Source
* Software to apply Statistical Disclosure Control techniques
* 
* Copyright 2014 Statistics Netherlands
* 
* This program is free software; you can redistribute it and/or 
* modify it under the terms of the European Union Public Licence 
* (EUPL) version 1.1, as published by the European Commission.
* 
* You can find the text of the EUPL v1.1 on
* https://joinup.ec.europa.eu/software/page/eupl/licence-eupl
* 
* This software is distributed on an "AS IS" basis without 
* warranties or conditions of any kind, either express or implied.
*/

package tauargus.gui;

import argus.model.ArgusException;
import argus.utils.StrUtils;
import argus.utils.SystemUtils;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import tauargus.model.Application;
import tauargus.model.OptiSuppress;
import tauargus.utils.TauArgusUtils;

/**
 *
 * @author Hundepool
 */
public class DialogProtectJJFormat extends javax.swing.JDialog {

    /**
     * Creates new form DialogProtectJJFormat
     */
    private javax.swing.JFileChooser fileChooser;
    
    public DialogProtectJJFormat(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        fileChooser = new javax.swing.JFileChooser();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldJJInputFile = new javax.swing.JTextField();
        jLabelProtectJJFormat = new javax.swing.JLabel();
        jTextFieldJJOutputFile = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonSearchJJInputFile = new javax.swing.JButton();
        jButtonSearchJJOutputFile = new javax.swing.JButton();
        jButtonProtectJJFile = new javax.swing.JButton();
        jButtonReady = new javax.swing.JButton();
        jTextFieldMaxTime = new javax.swing.JTextField();
        jLabelMaxTime = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelProtectJJFormat.setText("Protect a JJ file directly");

        jLabel1.setText("Output file");

        jButtonSearchJJInputFile.setText("...");
        jButtonSearchJJInputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchJJInputFileActionPerformed(evt);
            }
        });

        jButtonSearchJJOutputFile.setText("...");
        jButtonSearchJJOutputFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchJJOutputFileActionPerformed(evt);
            }
        });

        jButtonProtectJJFile.setText("Go");
        jButtonProtectJJFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProtectJJFileActionPerformed(evt);
            }
        });

        jButtonReady.setText("Ready");
        jButtonReady.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReadyActionPerformed(evt);
            }
        });

        jTextFieldMaxTime.setText("10");

        jLabelMaxTime.setText("Max time (minutes)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldJJInputFile)
                                    .addComponent(jLabelProtectJJFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldJJOutputFile, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonSearchJJInputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonSearchJJOutputFile, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jButtonProtectJJFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonReady))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabelMaxTime)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldMaxTime, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabelProtectJJFormat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldJJInputFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchJJInputFile))
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldJJOutputFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchJJOutputFile))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldMaxTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMaxTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonProtectJJFile)
                    .addComponent(jButtonReady))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonProtectJJFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProtectJJFileActionPerformed
        // TODO add your handling code here:
        int maxTime, nSec;
        if (!TauArgusUtils.ExistFile(jTextFieldJJInputFile.getText())||jTextFieldJJInputFile.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Illegal or no JJ file name spcified", "Protect JJ file",  JOptionPane.ERROR_MESSAGE );
            return;
        }
        if (jTextFieldJJOutputFile.getText().equals("")){
            JOptionPane.showMessageDialog(this, "No JJ output file name spcified" );
            return;
        }
        try{
         maxTime = StrUtils.toInteger(jTextFieldMaxTime.getText());
        } catch (ArgusException ex){
            JOptionPane.showMessageDialog(this, "No correct value for Max Time\n"+
                                                 ex.getMessage());
            return;        
        } 
        if (maxTime <= 0) {
            JOptionPane.showMessageDialog(this, "A positive value for Max Time is needed" );
            return;            
        } 

          Path source = Paths.get(jTextFieldJJInputFile.getText());
          Path destination = Paths.get(jTextFieldJJInputFile.getText());
          try {
             Files.copy(source, destination);    
	  } catch (IOException e) {
	    JOptionPane.showMessageDialog(this, "Unable to copy the input file for the optimasation routine" );
            return; 
	  }  

          OptiSuppress.ProtectJJFormat (jTextFieldJJInputFile.getText());
          nSec = OptiSuppress.addSecondariesToJJFile(jTextFieldJJInputFile.getText(),
                  jTextFieldJJOutputFile.getText());
          if (nSec<0){
	    JOptionPane.showMessageDialog(this, "Unable to apply the result to the JJ file" );
          }
          else{
	    JOptionPane.showMessageDialog(this, "The output file "+jTextFieldJJOutputFile.getText()+
                    " has been created\n"+ 
                    nSec+ " secondaries");
            SystemUtils.writeLogbook("JJ file "+" has been protect\n" +
                    "Input file  " + jTextFieldJJInputFile.getText() + "\n"+
                    "Output file "+ jTextFieldJJInputFile.getText()+ "\n"+
                    nSec +" secondaries");              
          }

            
  //  } catch (ArgusException ex){
    //        JOptionPane.showMessageDialog(this, "No correct value for Max Time\n"+
      //                                           ex.getMessage());

        
    }//GEN-LAST:event_jButtonProtectJJFileActionPerformed

    private void jButtonSearchJJInputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchJJInputFileActionPerformed
        // TODO add your handling code here:+
        String hs = SystemUtils.getRegString("general", "datadir", "");
        if (!hs.equals("")){
            File file = new File(hs); 
            fileChooser.setCurrentDirectory(file);
        }
        fileChooser.setDialogTitle("Open JJ file");
        fileChooser.setSelectedFile(new File(""));
        fileChooser.resetChoosableFileFilters();
        // filters are shown in order of declaration, setFileFilter sets the default filter
        fileChooser.setFileFilter(new FileNameExtensionFilter("JJ file (*.jj)", "jj"));
        if (fileChooser.showOpenDialog(this) == javax.swing.JFileChooser.APPROVE_OPTION) {
 //           textFieldMicrodata.setText(fileChooser.getSelectedFile().toString());
            hs = fileChooser.getSelectedFile().getPath();
          jTextFieldJJInputFile.setText(hs);  
        }   
    }//GEN-LAST:event_jButtonSearchJJInputFileActionPerformed

    private void jButtonSearchJJOutputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchJJOutputFileActionPerformed
        // TODO add your handling code here:
        String hs = SystemUtils.getRegString("general", "datadir", "");
        if (!hs.equals("")){
            File file = new File(hs); 
            fileChooser.setCurrentDirectory(file);
        }
        fileChooser.setDialogTitle("JJ output file");
        fileChooser.setSelectedFile(new File(""));
        fileChooser.resetChoosableFileFilters();
        // filters are shown in order of declaration, setFileFilter sets the default filter
        fileChooser.setFileFilter(new FileNameExtensionFilter("JJ file (*.jj)", "jj"));
        if (fileChooser.showOpenDialog(this) == javax.swing.JFileChooser.APPROVE_OPTION) {
 //           textFieldMicrodata.setText(fileChooser.getSelectedFile().toString());
            hs = fileChooser.getSelectedFile().getPath();
          jTextFieldJJOutputFile.setText(hs);  
        }
    }//GEN-LAST:event_jButtonSearchJJOutputFileActionPerformed

    private void jButtonReadyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReadyActionPerformed
        // TODO add your handling code here:
          setVisible(false);
    }//GEN-LAST:event_jButtonReadyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogProtectJJFormat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogProtectJJFormat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogProtectJJFormat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogProtectJJFormat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogProtectJJFormat dialog = new DialogProtectJJFormat(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonProtectJJFile;
    private javax.swing.JButton jButtonReady;
    private javax.swing.JButton jButtonSearchJJInputFile;
    private javax.swing.JButton jButtonSearchJJOutputFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelMaxTime;
    private javax.swing.JLabel jLabelProtectJJFormat;
    private javax.swing.JTextField jTextFieldJJInputFile;
    private javax.swing.JTextField jTextFieldJJOutputFile;
    private javax.swing.JTextField jTextFieldMaxTime;
    // End of variables declaration//GEN-END:variables
}
